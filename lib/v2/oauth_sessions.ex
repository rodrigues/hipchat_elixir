# Code generated by `$ mix hipchat.generate`
defmodule Hipchat.V2.OauthSessions do
  @moduledoc """
  HipChat V2 OauthSessions API module.
  """

  alias Hipchat.{Client, Httpc}

  @endpoint "https://api.hipchat.com/v2"

  @doc """
  [https://www.hipchat.com/docs/apiv2/method/delete_session](https://www.hipchat.com/docs/apiv2/method/delete_session)
  """
  @spec delete_session(Client.t, String.t) :: Httpc.res_t
  def delete_session(client, access_token) do
    Httpc.request(:delete,
                  "#{@endpoint}/oauth/token/#{access_token}",
                  "",
                  Client.headers(client),
                  Client.options(client, []))
  end

  @doc """
  [https://www.hipchat.com/docs/apiv2/method/generate_token](https://www.hipchat.com/docs/apiv2/method/generate_token)
  """
  @spec generate_token(Client.t, map) :: Httpc.res_t
  def generate_token(client, body) do
    Httpc.request(:post,
                  "#{@endpoint}/oauth/token",
                  body,
                  Client.headers(client),
                  Client.options(client, []))
  end

  @doc """
  [https://www.hipchat.com/docs/apiv2/method/get_session](https://www.hipchat.com/docs/apiv2/method/get_session)
  """
  @spec get_session(Client.t, String.t) :: Httpc.res_t
  def get_session(client, access_token) do
    Httpc.request(:get,
                  "#{@endpoint}/oauth/token/#{access_token}",
                  "",
                  Client.headers(client),
                  Client.options(client, []))
  end
end
